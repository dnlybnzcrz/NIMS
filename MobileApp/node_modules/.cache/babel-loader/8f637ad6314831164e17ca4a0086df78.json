{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\pbs-issp-nims-frontend\\\\src\\\\components\\\\MediaModal.js\";\nimport React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nvar MediaModal = function MediaModal(_ref) {\n  var show = _ref.show,\n    handleClose = _ref.handleClose,\n    mediaUrl = _ref.mediaUrl,\n    mediaType = _ref.mediaType;\n  var renderMedia = function renderMedia() {\n    if (!mediaUrl) return null;\n    if (mediaType === \"image\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: mediaUrl,\n        alt: \"Media\",\n        style: {\n          width: \"100%\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 14\n        }\n      });\n    } else if (mediaType === \"audio\") {\n      return /*#__PURE__*/React.createElement(\"audio\", {\n        controls: true,\n        style: {\n          width: \"100%\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"source\", {\n        src: mediaUrl,\n        type: \"audio/mpeg\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }\n      }), \"Your browser does not support the audio element.\");\n    } else if (mediaType === \"video\") {\n      return /*#__PURE__*/React.createElement(\"video\", {\n        controls: true,\n        style: {\n          width: \"100%\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"source\", {\n        src: mediaUrl,\n        type: \"video/mp4\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }), \"Your browser does not support the video element.\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 14\n        }\n      }, \"Unsupported media type\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    size: \"lg\",\n    centered: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Media Preview\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, renderMedia()), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Close\")));\n};\nexport default MediaModal;","map":{"version":3,"names":["React","Modal","Button","MediaModal","_ref","show","handleClose","mediaUrl","mediaType","renderMedia","createElement","src","alt","style","width","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","controls","type","onHide","size","centered","Header","closeButton","Title","Body","Footer","variant","onClick"],"sources":["C:/Users/User/Desktop/pbs-issp-nims-frontend/src/components/MediaModal.js"],"sourcesContent":["import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst MediaModal = ({ show, handleClose, mediaUrl, mediaType }) => {\r\n  const renderMedia = () => {\r\n    if (!mediaUrl) return null;\r\n\r\n    if (mediaType === \"image\") {\r\n      return <img src={mediaUrl} alt=\"Media\" style={{ width: \"100%\" }} />;\r\n    } else if (mediaType === \"audio\") {\r\n      return (\r\n        <audio controls style={{ width: \"100%\" }}>\r\n          <source src={mediaUrl} type=\"audio/mpeg\" />\r\n          Your browser does not support the audio element.\r\n        </audio>\r\n      );\r\n    } else if (mediaType === \"video\") {\r\n      return (\r\n        <video controls style={{ width: \"100%\" }}>\r\n          <source src={mediaUrl} type=\"video/mp4\" />\r\n          Your browser does not support the video element.\r\n        </video>\r\n      );\r\n    } else {\r\n      return <p>Unsupported media type</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose} size=\"lg\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Media Preview</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{renderMedia()}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MediaModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}