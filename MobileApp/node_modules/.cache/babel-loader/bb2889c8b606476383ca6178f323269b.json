{"ast":null,"code":"\"use client\";\n\nimport _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\NIMS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\User\\\\Desktop\\\\NIMS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Offcanvas from './Offcanvas';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar NavbarOffcanvas = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var onHide = _ref.onHide,\n    props = _objectWithoutProperties(_ref, [\"onHide\"]);\n  var context = useContext(NavbarContext);\n  var handleHide = useEventCallback(function () {\n    context == null || context.onToggle == null || context.onToggle();\n    onHide == null || onHide();\n  });\n  return /*#__PURE__*/_jsx(Offcanvas, _objectSpread({\n    ref: ref,\n    show: !!(context != null && context.expanded)\n  }, props, {\n    renderStaticNode: true,\n    onHide: handleHide\n  }));\n});\nNavbarOffcanvas.displayName = 'NavbarOffcanvas';\nexport default NavbarOffcanvas;","map":null,"metadata":{},"sourceType":"module"}