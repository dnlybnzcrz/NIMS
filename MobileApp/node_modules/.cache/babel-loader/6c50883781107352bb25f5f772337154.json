{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\pbs-issp-nims-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useCallback } from 'react';\nvar hiddenStyles = {\n  display: 'none'\n};\nfunction HiddenText(_ref) {\n  var id = _ref.id,\n    value = _ref.value;\n  return React.createElement(\"div\", {\n    id: id,\n    style: hiddenStyles\n  }, value);\n}\nfunction LiveRegion(_ref) {\n  var id = _ref.id,\n    announcement = _ref.announcement,\n    _ref$ariaLiveType = _ref.ariaLiveType,\n    ariaLiveType = _ref$ariaLiveType === void 0 ? \"assertive\" : _ref$ariaLiveType; // Hide element visually but keep it readable by screen readers\n  var visuallyHidden = {\n    position: 'fixed',\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0 0 0 0)',\n    clipPath: 'inset(100%)',\n    whiteSpace: 'nowrap'\n  };\n  return React.createElement(\"div\", {\n    id: id,\n    style: visuallyHidden,\n    role: \"status\",\n    \"aria-live\": ariaLiveType,\n    \"aria-atomic\": true\n  }, announcement);\n}\nfunction useAnnouncement() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    announcement = _useState2[0],\n    setAnnouncement = _useState2[1];\n  var announce = useCallback(function (value) {\n    if (value != null) {\n      setAnnouncement(value);\n    }\n  }, []);\n  return {\n    announce: announce,\n    announcement: announcement\n  };\n}\nexport { HiddenText, LiveRegion, useAnnouncement };","map":null,"metadata":{},"sourceType":"module"}